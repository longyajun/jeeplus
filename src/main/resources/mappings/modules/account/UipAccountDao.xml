<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.account.dao.UipAccountDao">
    
	<sql id="uipAccountColumns">
		a.id AS "id",
		a.name AS "name",
		a.amount AS "amount",
		a.balance AS "balance",
		a.certifid AS "certifId",
		a.agentid AS "agentId"
	</sql>
	
	<sql id="uipAccountJoins">
	</sql>
	
    
	<select id="get" resultType="UipAccount" >
		SELECT 
			<include refid="uipAccountColumns"/>
		FROM uip_account a
		<include refid="uipAccountJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="UipAccount" >
		SELECT 
			<include refid="uipAccountColumns"/>
		FROM uip_account a
		<include refid="uipAccountJoins"/>
		<where>
			
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="amount != null and amount != ''">
				AND a.amount = #{amount}
			</if>
			<if test="balance != null and balance != ''">
				AND a.balance = #{balance}
			</if>
			<if test="certifId != null and certifId != ''">
				AND a.certifid = #{certifId}
			</if>
			<if test="agentId != null and agentId != ''">
				AND a.agentid = #{agentId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UipAccount" >
		SELECT 
			<include refid="uipAccountColumns"/>
		FROM uip_account a
		<include refid="uipAccountJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO uip_account(
			id,
			name,
			amount,
			balance,
			certifid,
			agentid
		) VALUES (
			uip_account_id_seq.NEXTVAL,
			#{name},
			#{amount},
			#{balance},
			#{certifId},
			#{agentId}
		)
	</insert>
	
	<update id="update">
		UPDATE uip_account SET 	
			name = #{name},
			amount = #{amount},
			balance = #{balance},
			certifid = #{certifId},
			agentid = #{agentId}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM uip_account
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE uip_account SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="UipAccount" statementType="STATEMENT">
		select * FROM uip_account  where ${propertyName} = '${value}'
	</select>
	
</mapper>